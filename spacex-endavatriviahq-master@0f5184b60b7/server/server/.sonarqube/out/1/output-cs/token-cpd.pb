π•
FC:\Projects\HQTrivia\server\HQTrivia.Data\Data\ApplicationDbContext.cs
	namespace 	
HQTrivia
 
. 
Data 
. 
Data 
{ 
public 

class  
ApplicationDbContext %
:& '
	DbContext( 1
{ 
public  
ApplicationDbContext #
(# $
DbContextOptions$ 4
<4 5 
ApplicationDbContext5 I
>I J
optionsK R
)R S
:T U
baseV Z
(Z [
options[ b
)b c
{ 	
} 	
public 
DbSet 
< 
Question 
> 
	Questions (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
Answer 
> 
Answers $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
Quiz 
> 
Quizzes "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Quiz  $
>$ %
(% &
)& '
.' (
HasData( /
(/ 0
new 
Quiz 
{ 
Id 
= 
$num 
, 
Name 
= 
$str #
,# $
Prize   
=   
$num   !
,  ! "
CurrencyType!! !
=!!" #
$str!!$ *
,!!* +
StartingDateTime"" %
=""& '
new""( +
DateTime"", 4
(""4 5
$num""5 9
,""9 :
$num""; =
,""= >
$num""? A
,""A B
$num""C E
,""E F
$num""G I
,""I J
$num""K M
)""M N
,""N O
CreatedDateTime## $
=##% &
DateTime##' /
.##/ 0
Now##0 3
,##3 4
Status$$ 
=$$ 
Status$$ $
.$$$ %
	SCHEDULED$$% .
,$$. /
ThumbNailURL%% !
=%%" #
$str	%%$ ‡
}&& 
)'' 
;'' 
modelBuilder** 
.** 
Entity** 
<**  
Question**  (
>**( )
(**) *
)*** +
.**+ ,
HasData**, 3
(**3 4
new++ 
Question++ 
{,, 
Id-- 
=-- 
$num-- 
,-- 
QuizId.. 
=.. 
$num.. 
,.. 
Text// 
=// 
$str// >
}00 
,00 
new11 
Question11 
{22 
Id33 
=33 
$num33 
,33 
QuizId44 
=44 
$num44 
,44 
Text55 
=55 
$str55 O
}66 
,66 
new77 
Question77 
{88 
Id99 
=99 
$num99 
,99 
QuizId:: 
=:: 
$num:: 
,:: 
Text;; 
=;; 
$str;; `
}<< 
,<< 
new== 
Question== 
{>> 
Id?? 
=?? 
$num?? 
,?? 
QuizId@@ 
=@@ 
$num@@ 
,@@ 
TextAA 
=AA 
$strAA K
}BB 
,BB 
newCC 
QuestionCC 
{DD 
IdEE 
=EE 
$numEE 
,EE 
QuizIdFF 
=FF 
$numFF 
,FF 
TextGG 
=GG 
$strGG L
}HH 
,HH 
newII 
QuestionII 
{JJ 
IdKK 
=KK 
$numKK 
,KK 
QuizIdLL 
=LL 
$numLL 
,LL 
TextMM 
=MM 
$strMM J
}NN 
,NN 
newOO 
QuestionOO 
{PP 
IdQQ 
=QQ 
$numQQ 
,QQ 
QuizIdRR 
=RR 
$numRR 
,RR 
TextSS 
=SS 
$strSS A
}TT 
,TT 
newUU 
QuestionUU 
{VV 
IdWW 
=WW 
$numWW 
,WW 
QuizIdXX 
=XX 
$numXX 
,XX 
TextYY 
=YY 
$strYY `
}ZZ 
,ZZ 
new[[ 
Question[[ 
{\\ 
Id]] 
=]] 
$num]] 
,]] 
QuizId^^ 
=^^ 
$num^^ 
,^^ 
Text__ 
=__ 
$str__ X
}`` 
,`` 
newaa 
Questionaa 
{bb 
Idcc 
=cc 
$numcc 
,cc 
QuizIddd 
=dd 
$numdd 
,dd 
Textee 
=ee 
$stree r
}ff 
)gg 
;gg 
modelBuilderii 
.ii 
Entityii 
<ii  
Answerii  &
>ii& '
(ii' (
)ii( )
.ii) *
HasDataii* 1
(ii1 2
newkk 
Answerkk 
{ll 
Idmm 
=mm 
$nummm 
,mm 
Textnn 
=nn 
$strnn "
,nn" #
	IsCorrectoo 
=oo 
falseoo  %
,oo% &

QuestionIdpp 
=pp  
$numpp! "
}qq 
,qq 
newrr 
Answerrr 
{ss 
Idtt 
=tt 
$numtt 
,tt 
Textuu 
=uu 
$struu !
,uu! "
	IsCorrectvv 
=vv 
falsevv  %
,vv% &

QuestionIdww 
=ww  
$numww! "
}xx 
,xx 
newyy 
Answeryy 
{zz 
Id{{ 
={{ 
$num{{ 
,{{ 
Text|| 
=|| 
$str|| $
,||$ %
	IsCorrect}} 
=}} 
false}}  %
,}}% &

QuestionId~~ 
=~~  
$num~~! "
} 
, 
new
ÄÄ 
Answer
ÄÄ 
{
ÅÅ 
Id
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
Text
ÉÉ 
=
ÉÉ 
$str
ÉÉ $
,
ÉÉ$ %
	IsCorrect
ÑÑ 
=
ÑÑ 
true
ÑÑ  $
,
ÑÑ$ %

QuestionId
ÖÖ 
=
ÖÖ  
$num
ÖÖ! "
}
ÜÜ 
,
ÜÜ 
new
áá 
Answer
áá 
{
àà 
Id
ââ 
=
ââ 
$num
ââ 
,
ââ 
Text
ää 
=
ää 
$str
ää +
,
ää+ ,
	IsCorrect
ãã 
=
ãã 
true
ãã  $
,
ãã$ %

QuestionId
åå 
=
åå  
$num
åå! "
}
çç 
,
çç 
new
éé 
Answer
éé 
{
èè 
Id
êê 
=
êê 
$num
êê 
,
êê 
Text
ëë 
=
ëë 
$str
ëë ,
,
ëë, -
	IsCorrect
íí 
=
íí 
false
íí  %
,
íí% &

QuestionId
ìì 
=
ìì  
$num
ìì! "
}
îî 
,
îî 
new
ïï 
Answer
ïï 
{
ññ 
Id
óó 
=
óó 
$num
óó 
,
óó 
Text
òò 
=
òò 
$str
òò +
,
òò+ ,
	IsCorrect
ôô 
=
ôô 
false
ôô  %
,
ôô% &

QuestionId
öö 
=
öö  
$num
öö! "
}
õõ 
,
õõ 
new
úú 
Answer
úú 
{
ùù 
Id
ûû 
=
ûû 
$num
ûû 
,
ûû 
Text
üü 
=
üü 
$str
üü (
,
üü( )
	IsCorrect
†† 
=
†† 
false
††  %
,
††% &

QuestionId
°° 
=
°°  
$num
°°! "
}
¢¢ 
,
¢¢ 
new
££ 
Answer
££ 
{
§§ 
Id
•• 
=
•• 
$num
•• 
,
•• 
Text
¶¶ 
=
¶¶ 
$str
¶¶ $
,
¶¶$ %
	IsCorrect
ßß 
=
ßß 
false
ßß  %
,
ßß% &

QuestionId
®® 
=
®®  
$num
®®! "
}
©© 
,
©© 
new
™™ 
Answer
™™ 
{
´´ 
Id
¨¨ 
=
¨¨ 
$num
¨¨ 
,
¨¨ 
Text
≠≠ 
=
≠≠ 
$str
≠≠ "
,
≠≠" #
	IsCorrect
ÆÆ 
=
ÆÆ 
false
ÆÆ  %
,
ÆÆ% &

QuestionId
ØØ 
=
ØØ  
$num
ØØ! "
}
∞∞ 
,
∞∞ 
new
±± 
Answer
±± 
{
≤≤ 
Id
≥≥ 
=
≥≥ 
$num
≥≥ 
,
≥≥ 
Text
¥¥ 
=
¥¥ 
$str
¥¥ !
,
¥¥! "
	IsCorrect
µµ 
=
µµ 
true
µµ  $
,
µµ$ %

QuestionId
∂∂ 
=
∂∂  
$num
∂∂! "
}
∑∑ 
,
∑∑ 
new
∏∏ 
Answer
∏∏ 
{
ππ 
Id
∫∫ 
=
∫∫ 
$num
∫∫ 
,
∫∫ 
Text
ªª 
=
ªª 
$str
ªª "
,
ªª" #
	IsCorrect
ºº 
=
ºº 
false
ºº  %
,
ºº% &

QuestionId
ΩΩ 
=
ΩΩ  
$num
ΩΩ! "
}
ææ 
,
ææ 
new
øø 
Answer
øø 
{
¿¿ 
Id
¡¡ 
=
¡¡ 
$num
¡¡ 
,
¡¡ 
Text
¬¬ 
=
¬¬ 
$str
¬¬ )
,
¬¬) *
	IsCorrect
√√ 
=
√√ 
false
√√  %
,
√√% &

QuestionId
ƒƒ 
=
ƒƒ  
$num
ƒƒ! "
}
≈≈ 
,
≈≈ 
new
∆∆ 
Answer
∆∆ 
{
«« 
Id
»» 
=
»» 
$num
»» 
,
»» 
Text
…… 
=
…… 
$str
…… *
,
……* +
	IsCorrect
   
=
   
false
    %
,
  % &

QuestionId
ÀÀ 
=
ÀÀ  
$num
ÀÀ! "
}
ÃÃ 
,
ÃÃ 
new
ÕÕ 
Answer
ÕÕ 
{
ŒŒ 
Id
œœ 
=
œœ 
$num
œœ 
,
œœ 
Text
–– 
=
–– 
$str
–– /
,
––/ 0
	IsCorrect
—— 
=
—— 
false
——  %
,
——% &

QuestionId
““ 
=
““  
$num
““! "
}
”” 
,
”” 
new
‘‘ 
Answer
‘‘ 
{
’’ 
Id
÷÷ 
=
÷÷ 
$num
÷÷ 
,
÷÷ 
Text
◊◊ 
=
◊◊ 
$str
◊◊ )
,
◊◊) *
	IsCorrect
ÿÿ 
=
ÿÿ 
true
ÿÿ  $
,
ÿÿ$ %

QuestionId
ŸŸ 
=
ŸŸ  
$num
ŸŸ! "
}
⁄⁄ 
,
⁄⁄ 
new
€€ 
Answer
€€ 
{
‹‹ 
Id
›› 
=
›› 
$num
›› 
,
›› 
Text
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ "
,
ﬁﬁ" #
	IsCorrect
ﬂﬂ 
=
ﬂﬂ 
true
ﬂﬂ  $
,
ﬂﬂ$ %

QuestionId
‡‡ 
=
‡‡  
$num
‡‡! "
}
·· 
,
·· 
new
‚‚ 
Answer
‚‚ 
{
„„ 
Id
‰‰ 
=
‰‰ 
$num
‰‰ 
,
‰‰ 
Text
ÂÂ 
=
ÂÂ 
$str
ÂÂ $
,
ÂÂ$ %
	IsCorrect
ÊÊ 
=
ÊÊ 
false
ÊÊ  %
,
ÊÊ% &

QuestionId
ÁÁ 
=
ÁÁ  
$num
ÁÁ! "
}
ËË 
,
ËË 
new
ÈÈ 
Answer
ÈÈ 
{
ÍÍ 
Id
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
,
ÎÎ 
Text
ÏÏ 
=
ÏÏ 
$str
ÏÏ #
,
ÏÏ# $
	IsCorrect
ÌÌ 
=
ÌÌ 
false
ÌÌ  %
,
ÌÌ% &

QuestionId
ÓÓ 
=
ÓÓ  
$num
ÓÓ! "
}
ÔÔ 
,
ÔÔ 
new
 
Answer
 
{
ÒÒ 
Id
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
Text
ÛÛ 
=
ÛÛ 
$str
ÛÛ "
,
ÛÛ" #
	IsCorrect
ÙÙ 
=
ÙÙ 
true
ÙÙ  $
,
ÙÙ$ %

QuestionId
ıı 
=
ıı  
$num
ıı! "
}
ˆˆ 
,
ˆˆ 
new
˜˜ 
Answer
˜˜ 
{
¯¯ 
Id
˘˘ 
=
˘˘ 
$num
˘˘ 
,
˘˘ 
Text
˙˙ 
=
˙˙ 
$str
˙˙ $
,
˙˙$ %
	IsCorrect
˚˚ 
=
˚˚ 
true
˚˚  $
,
˚˚$ %

QuestionId
¸¸ 
=
¸¸  
$num
¸¸! "
}
˝˝ 
,
˝˝ 
new
˛˛ 
Answer
˛˛ 
{
ˇˇ 
Id
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
Text
ÅÅ 
=
ÅÅ 
$str
ÅÅ #
,
ÅÅ# $
	IsCorrect
ÇÇ 
=
ÇÇ 
false
ÇÇ  %
,
ÇÇ% &

QuestionId
ÉÉ 
=
ÉÉ  
$num
ÉÉ! "
}
ÑÑ 
,
ÑÑ 
new
ÖÖ 
Answer
ÖÖ 
{
ÜÜ 
Id
áá 
=
áá 
$num
áá 
,
áá 
Text
àà 
=
àà 
$str
àà #
,
àà# $
	IsCorrect
ââ 
=
ââ 
false
ââ  %
,
ââ% &

QuestionId
ää 
=
ää  
$num
ää! "
}
ãã 
,
ãã 
new
åå 
Answer
åå 
{
çç 
Id
éé 
=
éé 
$num
éé 
,
éé 
Text
èè 
=
èè 
$str
èè $
,
èè$ %
	IsCorrect
êê 
=
êê 
true
êê  $
,
êê$ %

QuestionId
ëë 
=
ëë  
$num
ëë! "
}
íí 
,
íí 
new
ìì 
Answer
ìì 
{
îî 
Id
ïï 
=
ïï 
$num
ïï 
,
ïï 
Text
ññ 
=
ññ 
$str
ññ #
,
ññ# $
	IsCorrect
óó 
=
óó 
false
óó  %
,
óó% &

QuestionId
òò 
=
òò  
$num
òò! "
}
ôô 
,
ôô 
new
öö 
Answer
öö 
{
õõ 
Id
úú 
=
úú 
$num
úú 
,
úú 
Text
ùù 
=
ùù 
$str
ùù $
,
ùù$ %
	IsCorrect
ûû 
=
ûû 
false
ûû  %
,
ûû% &

QuestionId
üü 
=
üü  
$num
üü! "
}
†† 
,
†† 
new
°° 
Answer
°° 
{
¢¢ 
Id
££ 
=
££ 
$num
££ 
,
££ 
Text
§§ 
=
§§ 
$str
§§ #
,
§§# $
	IsCorrect
•• 
=
•• 
true
••  $
,
••$ %

QuestionId
¶¶ 
=
¶¶  
$num
¶¶! "
}
ßß 
,
ßß 
new
®® 
Answer
®® 
{
©© 
Id
™™ 
=
™™ 
$num
™™ 
,
™™ 
Text
´´ 
=
´´ 
$str
´´ $
,
´´$ %
	IsCorrect
¨¨ 
=
¨¨ 
false
¨¨  %
,
¨¨% &

QuestionId
≠≠ 
=
≠≠  
$num
≠≠! "
}
ÆÆ 
,
ÆÆ 
new
ØØ 
Answer
ØØ 
{
∞∞ 
Id
±± 
=
±± 
$num
±± 
,
±± 
Text
≤≤ 
=
≤≤ 
$str
≤≤ %
,
≤≤% &
	IsCorrect
≥≥ 
=
≥≥ 
false
≥≥  %
,
≥≥% &

QuestionId
¥¥ 
=
¥¥  
$num
¥¥! "
}
µµ 
,
µµ 
new
∂∂ 
Answer
∂∂ 
{
∑∑ 
Id
∏∏ 
=
∏∏ 
$num
∏∏ 
,
∏∏ 
Text
ππ 
=
ππ 
$str
ππ %
,
ππ% &
	IsCorrect
∫∫ 
=
∫∫ 
false
∫∫  %
,
∫∫% &

QuestionId
ªª 
=
ªª  
$num
ªª! "
}
ºº 
,
ºº 
new
ΩΩ 
Answer
ΩΩ 
{
ææ 
Id
øø 
=
øø 
$num
øø 
,
øø 
Text
¿¿ 
=
¿¿ 
$str
¿¿ &
,
¿¿& '
	IsCorrect
¡¡ 
=
¡¡ 
true
¡¡  $
,
¡¡$ %

QuestionId
¬¬ 
=
¬¬  
$num
¬¬! "
}
√√ 
,
√√ 
new
ƒƒ 
Answer
ƒƒ 
{
≈≈ 
Id
∆∆ 
=
∆∆ 
$num
∆∆ 
,
∆∆ 
Text
«« 
=
«« 
$str
«« &
,
««& '
	IsCorrect
»» 
=
»» 
false
»»  %
,
»»% &

QuestionId
…… 
=
……  
$num
……! "
}
   
,
   
new
ÀÀ 
Answer
ÀÀ 
{
ÃÃ 
Id
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
Text
ŒŒ 
=
ŒŒ 
$str
ŒŒ 
,
ŒŒ 
	IsCorrect
œœ 
=
œœ 
false
œœ  %
,
œœ% &

QuestionId
–– 
=
––  
$num
––! "
}
—— 
,
—— 
new
““ 
Answer
““ 
{
”” 
Id
‘‘ 
=
‘‘ 
$num
‘‘ 
,
‘‘ 
Text
’’ 
=
’’ 
$str
’’ 
,
’’ 
	IsCorrect
÷÷ 
=
÷÷ 
false
÷÷  %
,
÷÷% &

QuestionId
◊◊ 
=
◊◊  
$num
◊◊! "
}
ÿÿ 
,
ÿÿ 
new
ŸŸ 
Answer
ŸŸ 
{
⁄⁄ 
Id
€€ 
=
€€ 
$num
€€ 
,
€€ 
Text
‹‹ 
=
‹‹ 
$str
‹‹ 
,
‹‹ 
	IsCorrect
›› 
=
›› 
true
››  $
,
››$ %

QuestionId
ﬁﬁ 
=
ﬁﬁ  
$num
ﬁﬁ! "
}
ﬂﬂ 
,
ﬂﬂ 
new
‡‡ 
Answer
‡‡ 
{
·· 
Id
‚‚ 
=
‚‚ 
$num
‚‚ 
,
‚‚ 
Text
„„ 
=
„„ 
$str
„„ 
,
„„ 
	IsCorrect
‰‰ 
=
‰‰ 
false
‰‰  %
,
‰‰% &

QuestionId
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
}
ÊÊ 
,
ÊÊ 
new
ÁÁ 
Answer
ÁÁ 
{
ËË 
Id
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
Text
ÍÍ 
=
ÍÍ 
$str
ÍÍ "
,
ÍÍ" #
	IsCorrect
ÎÎ 
=
ÎÎ 
true
ÎÎ  $
,
ÎÎ$ %

QuestionId
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
}
ÌÌ 
,
ÌÌ 
new
ÓÓ 
Answer
ÓÓ 
{
ÔÔ 
Id
 
=
 
$num
 
,
 
Text
ÒÒ 
=
ÒÒ 
$str
ÒÒ "
,
ÒÒ" #
	IsCorrect
ÚÚ 
=
ÚÚ 
false
ÚÚ  %
,
ÚÚ% &

QuestionId
ÛÛ 
=
ÛÛ  
$num
ÛÛ! "
}
ÙÙ 
,
ÙÙ 
new
ıı 
Answer
ıı 
{
ˆˆ 
Id
˜˜ 
=
˜˜ 
$num
˜˜ 
,
˜˜ 
Text
¯¯ 
=
¯¯ 
$str
¯¯ )
,
¯¯) *
	IsCorrect
˘˘ 
=
˘˘ 
false
˘˘  %
,
˘˘% &

QuestionId
˙˙ 
=
˙˙  
$num
˙˙! "
}
˚˚ 
,
˚˚ 
new
¸¸ 
Answer
¸¸ 
{
˝˝ 
Id
˛˛ 
=
˛˛ 
$num
˛˛ 
,
˛˛ 
Text
ˇˇ 
=
ˇˇ 
$str
ˇˇ (
,
ˇˇ( )
	IsCorrect
ÄÄ 
=
ÄÄ 
false
ÄÄ  %
,
ÄÄ% &

QuestionId
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
}
ÇÇ 
)
ÉÉ 
;
ÉÉ 
base
ÜÜ 
.
ÜÜ 
OnModelCreating
ÜÜ  
(
ÜÜ  !
modelBuilder
ÜÜ! -
)
ÜÜ- .
;
ÜÜ. /
}
áá 	
}
àà 
}ââ ∂π
UC:\Projects\HQTrivia\server\HQTrivia.Data\Migrations\20230118084954_update to 2023.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Migrations "
{ 
public 

partial 
class 
updateto2023 %
:& '
	Migration( 1
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
Prize 
= 
table !
.! "
Column" (
<( )
double) /
>/ 0
(0 1
type1 5
:5 6
$str7 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
CurrencyType  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> M
,M N
nullableO W
:W X
falseY ^
)^ _
,_ `
StartingDateTime $
=% &
table' ,
., -
Column- 3
<3 4
DateTime4 <
>< =
(= >
type> B
:B C
$strD O
,O P
nullableQ Y
:Y Z
false[ `
)` a
,a b
CreatedDateTime #
=$ %
table& +
.+ ,
Column, 2
<2 3
DateTime3 ;
>; <
(< =
type= A
:A B
$strC N
,N O
nullableP X
:X Y
falseZ _
)_ `
,` a
Status 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
,L M
ThumbNailURL  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> M
,M N
nullableO W
:W X
trueY ]
)] ^
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
Id: <
)< =
;= >
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name   
:   
$str   
,   
columns!! 
:!! 
table!! 
=>!! !
new!!" %
{"" 
Username## 
=## 
table## $
.##$ %
Column##% +
<##+ ,
string##, 2
>##2 3
(##3 4
type##4 8
:##8 9
$str##: I
,##I J
nullable##K S
:##S T
false##U Z
)##Z [
,##[ \
Score$$ 
=$$ 
table$$ !
.$$! "
Column$$" (
<$$( )
int$$) ,
>$$, -
($$- .
type$$. 2
:$$2 3
$str$$4 9
,$$9 :
nullable$$; C
:$$C D
false$$E J
)$$J K
}%% 
,%% 
constraints&& 
:&& 
table&& "
=>&&# %
{'' 
table(( 
.(( 

PrimaryKey(( $
((($ %
$str((% /
,((/ 0
x((1 2
=>((3 5
x((6 7
.((7 8
Username((8 @
)((@ A
;((A B
})) 
))) 
;)) 
migrationBuilder++ 
.++ 
CreateTable++ (
(++( )
name,, 
:,, 
$str,, !
,,,! "
columns-- 
:-- 
table-- 
=>-- !
new--" %
{.. 
Id// 
=// 
table// 
.// 
Column// %
<//% &
int//& )
>//) *
(//* +
type//+ /
:/// 0
$str//1 6
,//6 7
nullable//8 @
://@ A
false//B G
)//G H
.00 

Annotation00 #
(00# $
$str00$ 8
,008 9
$str00: @
)00@ A
,00A B
Text11 
=11 
table11  
.11  !
Column11! '
<11' (
string11( .
>11. /
(11/ 0
type110 4
:114 5
$str116 E
,11E F
nullable11G O
:11O P
false11Q V
)11V W
,11W X
IsSent22 
=22 
table22 "
.22" #
Column22# )
<22) *
bool22* .
>22. /
(22/ 0
type220 4
:224 5
$str226 ;
,22; <
nullable22= E
:22E F
false22G L
)22L M
,22M N
Duration33 
=33 
table33 $
.33$ %
Column33% +
<33+ ,
int33, /
>33/ 0
(330 1
type331 5
:335 6
$str337 <
,33< =
nullable33> F
:33F G
false33H M
)33M N
,33N O
QuizId44 
=44 
table44 "
.44" #
Column44# )
<44) *
int44* -
>44- .
(44. /
type44/ 3
:443 4
$str445 :
,44: ;
nullable44< D
:44D E
true44F J
)44J K
}55 
,55 
constraints66 
:66 
table66 "
=>66# %
{77 
table88 
.88 

PrimaryKey88 $
(88$ %
$str88% 3
,883 4
x885 6
=>887 9
x88: ;
.88; <
Id88< >
)88> ?
;88? @
table99 
.99 

ForeignKey99 $
(99$ %
name:: 
::: 
$str:: ;
,::; <
column;; 
:;; 
x;;  !
=>;;" $
x;;% &
.;;& '
QuizId;;' -
,;;- .
principalTable<< &
:<<& '
$str<<( 1
,<<1 2
principalColumn== '
:==' (
$str==) -
)==- .
;==. /
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateTable@@ (
(@@( )
nameAA 
:AA 
$strAA 
,AA  
columnsBB 
:BB 
tableBB 
=>BB !
newBB" %
{CC 
IdDD 
=DD 
tableDD 
.DD 
ColumnDD %
<DD% &
intDD& )
>DD) *
(DD* +
typeDD+ /
:DD/ 0
$strDD1 6
,DD6 7
nullableDD8 @
:DD@ A
falseDDB G
)DDG H
.EE 

AnnotationEE #
(EE# $
$strEE$ 8
,EE8 9
$strEE: @
)EE@ A
,EEA B
TextFF 
=FF 
tableFF  
.FF  !
ColumnFF! '
<FF' (
stringFF( .
>FF. /
(FF/ 0
typeFF0 4
:FF4 5
$strFF6 E
,FFE F
nullableFFG O
:FFO P
falseFFQ V
)FFV W
,FFW X
	IsCorrectGG 
=GG 
tableGG  %
.GG% &
ColumnGG& ,
<GG, -
boolGG- 1
>GG1 2
(GG2 3
typeGG3 7
:GG7 8
$strGG9 >
,GG> ?
nullableGG@ H
:GGH I
falseGGJ O
)GGO P
,GGP Q

QuestionIdHH 
=HH  
tableHH! &
.HH& '
ColumnHH' -
<HH- .
intHH. 1
>HH1 2
(HH2 3
typeHH3 7
:HH7 8
$strHH9 >
,HH> ?
nullableHH@ H
:HHH I
falseHHJ O
)HHO P
}II 
,II 
constraintsJJ 
:JJ 
tableJJ "
=>JJ# %
{KK 
tableLL 
.LL 

PrimaryKeyLL $
(LL$ %
$strLL% 1
,LL1 2
xLL3 4
=>LL5 7
xLL8 9
.LL9 :
IdLL: <
)LL< =
;LL= >
tableMM 
.MM 

ForeignKeyMM $
(MM$ %
nameNN 
:NN 
$strNN ?
,NN? @
columnOO 
:OO 
xOO  !
=>OO" $
xOO% &
.OO& '

QuestionIdOO' 1
,OO1 2
principalTablePP &
:PP& '
$strPP( 3
,PP3 4
principalColumnQQ '
:QQ' (
$strQQ) -
,QQ- .
onDeleteRR  
:RR  !
ReferentialActionRR" 3
.RR3 4
CascadeRR4 ;
)RR; <
;RR< =
}SS 
)SS 
;SS 
migrationBuilderUU 
.UU 

InsertDataUU '
(UU' (
tableVV 
:VV 
$strVV  
,VV  !
columnsWW 
:WW 
newWW 
[WW 
]WW 
{WW  
$strWW! %
,WW% &
$strWW' 8
,WW8 9
$strWW: H
,WWH I
$strWWJ P
,WWP Q
$strWWR Y
,WWY Z
$strWW[ m
,WWm n
$strWWo w
,WWw x
$str	WWy á
}
WWà â
,
WWâ ä
valuesXX 
:XX 
newXX 
objectXX "
[XX" #
]XX# $
{XX% &
$numXX' (
,XX( )
newXX* -
DateTimeXX. 6
(XX6 7
$numXX7 ;
,XX; <
$numXX= >
,XX> ?
$numXX@ B
,XXB C
$numXXD E
,XXE F
$numXXG I
,XXI J
$numXXK M
,XXM N
$numXXO R
,XXR S
DateTimeKindXXT `
.XX` a
LocalXXa f
)XXf g
.XXg h
AddTicksXXh p
(XXp q
$numXXq s
)XXs t
,XXt u
$strXXv |
,XX| }
$str	XX~ Ö
,
XXÖ Ü
$num
XXá ç
,
XXç é
new
XXè í
DateTime
XXì õ
(
XXõ ú
$num
XXú †
,
XX† °
$num
XX¢ §
,
XX§ •
$num
XX¶ ®
,
XX® ©
$num
XX™ ¨
,
XX¨ ≠
$num
XXÆ Ø
,
XXØ ∞
$num
XX± ≤
,
XX≤ ≥
$num
XX¥ µ
,
XXµ ∂
DateTimeKind
XX∑ √
.
XX√ ƒ
Unspecified
XXƒ œ
)
XXœ –
,
XX– —
$num
XX“ ”
,
XX” ‘
$str
XX’ ë
}
XXí ì
)
XXì î
;
XXî ï
migrationBuilderZZ 
.ZZ 

InsertDataZZ '
(ZZ' (
table[[ 
:[[ 
$str[[ "
,[[" #
columns\\ 
:\\ 
new\\ 
[\\ 
]\\ 
{\\  
$str\\! %
,\\% &
$str\\' 1
,\\1 2
$str\\3 ;
,\\; <
$str\\= E
,\\E F
$str\\G M
}\\N O
,\\O P
values]] 
:]] 
new]] 
object]] "
[]]" #
,]]# $
]]]$ %
{^^ 
{__ 
$num__ 
,__ 
$num__ 
,__ 
false__ "
,__" #
$num__$ %
,__% &
$str__' J
}__K L
,__L M
{`` 
$num`` 
,`` 
$num`` 
,`` 
false`` "
,``" #
$num``$ %
,``% &
$str``' [
}``\ ]
,``] ^
{aa 
$numaa 
,aa 
$numaa 
,aa 
falseaa "
,aa" #
$numaa$ %
,aa% &
$straa' l
}aam n
,aan o
{bb 
$numbb 
,bb 
$numbb 
,bb 
falsebb "
,bb" #
$numbb$ %
,bb% &
$strbb' W
}bbX Y
,bbY Z
{cc 
$numcc 
,cc 
$numcc 
,cc 
falsecc "
,cc" #
$numcc$ %
,cc% &
$strcc' X
}ccY Z
,ccZ [
{dd 
$numdd 
,dd 
$numdd 
,dd 
falsedd "
,dd" #
$numdd$ %
,dd% &
$strdd' V
}ddW X
,ddX Y
{ee 
$numee 
,ee 
$numee 
,ee 
falseee "
,ee" #
$numee$ %
,ee% &
$stree' M
}eeN O
,eeO P
{ff 
$numff 
,ff 
$numff 
,ff 
falseff "
,ff" #
$numff$ %
,ff% &
$strff' l
}ffm n
,ffn o
{gg 
$numgg 
,gg 
$numgg 
,gg 
falsegg "
,gg" #
$numgg$ %
,gg% &
$strgg' d
}gge f
,ggf g
{hh 
$numhh 
,hh 
$numhh 
,hh 
falsehh #
,hh# $
$numhh% &
,hh& '
$strhh( 
}
hhÄ Å
}ii 
)ii 
;ii 
migrationBuilderkk 
.kk 

InsertDatakk '
(kk' (
tablell 
:ll 
$strll  
,ll  !
columnsmm 
:mm 
newmm 
[mm 
]mm 
{mm  
$strmm! %
,mm% &
$strmm' 2
,mm2 3
$strmm4 @
,mm@ A
$strmmB H
}mmI J
,mmJ K
valuesnn 
:nn 
newnn 
objectnn "
[nn" #
,nn# $
]nn$ %
{oo 
{pp 
$numpp 
,pp 
falsepp 
,pp 
$numpp  !
,pp! "
$strpp# *
}pp+ ,
,pp, -
{qq 
$numqq 
,qq 
falseqq 
,qq 
$numqq  !
,qq! "
$strqq# )
}qq* +
,qq+ ,
{rr 
$numrr 
,rr 
falserr 
,rr 
$numrr  !
,rr! "
$strrr# ,
}rr- .
,rr. /
{ss 
$numss 
,ss 
truess 
,ss 
$numss  
,ss  !
$strss" +
}ss, -
,ss- .
{tt 
$numtt 
,tt 
truett 
,tt 
$numtt  
,tt  !
$strtt" 2
}tt3 4
,tt4 5
{uu 
$numuu 
,uu 
falseuu 
,uu 
$numuu  !
,uu! "
$struu# 4
}uu5 6
,uu6 7
{vv 
$numvv 
,vv 
falsevv 
,vv 
$numvv  !
,vv! "
$strvv# 3
}vv4 5
,vv5 6
{ww 
$numww 
,ww 
falseww 
,ww 
$numww  !
,ww! "
$strww# 0
}ww1 2
,ww2 3
{xx 
$numxx 
,xx 
falsexx 
,xx 
$numxx  !
,xx! "
$strxx# ,
}xx- .
,xx. /
{yy 
$numyy 
,yy 
falseyy 
,yy  
$numyy! "
,yy" #
$stryy$ +
}yy, -
,yy- .
{zz 
$numzz 
,zz 
truezz 
,zz 
$numzz  !
,zz! "
$strzz# )
}zz* +
,zz+ ,
{{{ 
$num{{ 
,{{ 
false{{ 
,{{  
$num{{! "
,{{" #
$str{{$ +
}{{, -
,{{- .
{|| 
$num|| 
,|| 
false|| 
,||  
$num||! "
,||" #
$str||$ 2
}||3 4
,||4 5
{}} 
$num}} 
,}} 
false}} 
,}}  
$num}}! "
,}}" #
$str}}$ 3
}}}4 5
,}}5 6
{~~ 
$num~~ 
,~~ 
false~~ 
,~~  
$num~~! "
,~~" #
$str~~$ 8
}~~9 :
,~~: ;
{ 
$num 
, 
true 
, 
$num  !
,! "
$str# 1
}2 3
,3 4
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
true
ÄÄ 
,
ÄÄ 
$num
ÄÄ  !
,
ÄÄ! "
$str
ÄÄ# *
}
ÄÄ+ ,
,
ÄÄ, -
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
false
ÅÅ 
,
ÅÅ  
$num
ÅÅ! "
,
ÅÅ" #
$str
ÅÅ$ -
}
ÅÅ. /
,
ÅÅ/ 0
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
false
ÇÇ 
,
ÇÇ  
$num
ÇÇ! "
,
ÇÇ" #
$str
ÇÇ$ ,
}
ÇÇ- .
,
ÇÇ. /
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
true
ÉÉ 
,
ÉÉ 
$num
ÉÉ  !
,
ÉÉ! "
$str
ÉÉ# *
}
ÉÉ+ ,
,
ÉÉ, -
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
true
ÑÑ 
,
ÑÑ 
$num
ÑÑ  !
,
ÑÑ! "
$str
ÑÑ# ,
}
ÑÑ- .
,
ÑÑ. /
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
false
ÖÖ 
,
ÖÖ  
$num
ÖÖ! "
,
ÖÖ" #
$str
ÖÖ$ ,
}
ÖÖ- .
,
ÖÖ. /
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
false
ÜÜ 
,
ÜÜ  
$num
ÜÜ! "
,
ÜÜ" #
$str
ÜÜ$ ,
}
ÜÜ- .
,
ÜÜ. /
{
áá 
$num
áá 
,
áá 
true
áá 
,
áá 
$num
áá  !
,
áá! "
$str
áá# ,
}
áá- .
,
áá. /
{
àà 
$num
àà 
,
àà 
false
àà 
,
àà  
$num
àà! "
,
àà" #
$str
àà$ ,
}
àà- .
,
àà. /
{
ââ 
$num
ââ 
,
ââ 
false
ââ 
,
ââ  
$num
ââ! "
,
ââ" #
$str
ââ$ -
}
ââ. /
,
ââ/ 0
{
ää 
$num
ää 
,
ää 
true
ää 
,
ää 
$num
ää  !
,
ää! "
$str
ää# +
}
ää, -
,
ää- .
{
ãã 
$num
ãã 
,
ãã 
false
ãã 
,
ãã  
$num
ãã! "
,
ãã" #
$str
ãã$ -
}
ãã. /
,
ãã/ 0
{
åå 
$num
åå 
,
åå 
false
åå 
,
åå  
$num
åå! "
,
åå" #
$str
åå$ .
}
åå/ 0
,
åå0 1
{
çç 
$num
çç 
,
çç 
false
çç 
,
çç  
$num
çç! "
,
çç" #
$str
çç$ .
}
çç/ 0
,
çç0 1
{
éé 
$num
éé 
,
éé 
true
éé 
,
éé 
$num
éé  !
,
éé! "
$str
éé# .
}
éé/ 0
,
éé0 1
{
èè 
$num
èè 
,
èè 
false
èè 
,
èè  
$num
èè! "
,
èè" #
$str
èè$ /
}
èè0 1
,
èè1 2
{
êê 
$num
êê 
,
êê 
false
êê 
,
êê  
$num
êê! "
,
êê" #
$str
êê$ '
}
êê( )
,
êê) *
{
ëë 
$num
ëë 
,
ëë 
false
ëë 
,
ëë  
$num
ëë! "
,
ëë" #
$str
ëë$ '
}
ëë( )
,
ëë) *
{
íí 
$num
íí 
,
íí 
true
íí 
,
íí 
$num
íí  !
,
íí! "
$str
íí# &
}
íí' (
,
íí( )
{
ìì 
$num
ìì 
,
ìì 
false
ìì 
,
ìì  
$num
ìì! "
,
ìì" #
$str
ìì$ '
}
ìì( )
,
ìì) *
{
îî 
$num
îî 
,
îî 
true
îî 
,
îî 
$num
îî  !
,
îî! "
$str
îî# *
}
îî+ ,
,
îî, -
{
ïï 
$num
ïï 
,
ïï 
false
ïï 
,
ïï  
$num
ïï! "
,
ïï" #
$str
ïï$ +
}
ïï, -
,
ïï- .
{
ññ 
$num
ññ 
,
ññ 
false
ññ 
,
ññ  
$num
ññ! "
,
ññ" #
$str
ññ$ 2
}
ññ3 4
,
ññ4 5
{
óó 
$num
óó 
,
óó 
false
óó 
,
óó  
$num
óó! "
,
óó" #
$str
óó$ 1
}
óó2 3
}
òò 
)
òò 
;
òò 
migrationBuilder
öö 
.
öö 
CreateIndex
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ -
,
õõ- .
table
úú 
:
úú 
$str
úú  
,
úú  !
column
ùù 
:
ùù 
$str
ùù $
)
ùù$ %
;
ùù% &
migrationBuilder
üü 
.
üü 
CreateIndex
üü (
(
üü( )
name
†† 
:
†† 
$str
†† +
,
††+ ,
table
°° 
:
°° 
$str
°° "
,
°°" #
column
¢¢ 
:
¢¢ 
$str
¢¢  
)
¢¢  !
;
¢¢! "
}
££ 	
	protected
•• 
override
•• 
void
•• 
Down
••  $
(
••$ %
MigrationBuilder
••% 5
migrationBuilder
••6 F
)
••F G
{
¶¶ 	
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®® 
)
®®  
;
®®  !
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´ 
)
´´ 
;
´´ 
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ !
)
ÆÆ! "
;
ÆÆ" #
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± 
)
±±  
;
±±  !
}
≤≤ 	
}
≥≥ 
}¥¥ ◊
HC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\AnswerRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
{ 
public		 

class		 
AnswerRepository		 !
:		" #
IAnswerRepository		$ 5
{

 
private 
readonly  
ApplicationDbContext -
_db. 1
;1 2
public 
AnswerRepository 
(   
ApplicationDbContext  4
db5 7
)7 8
{ 	
_db 
= 
db 
; 
} 	
public 
Answer 
? 
	GetAnswer  
(  !
int! $
id% '
)' (
{ 	
return 
_db 
. 
Answers 
. 
FirstOrDefault -
(- .
answer. 4
=>5 7
answer8 >
.> ?
Id? A
==B D
idE G
)G H
;H I
} 	
public 
void 
RemoveAnswer  
(  !
int! $
answerId% -
)- .
{ 	
var 
answer 
= 
_db 
. 
Answers $
.$ %
FirstOrDefault% 3
(3 4
answer4 :
=>; =
answer> D
.D E
IdE G
==H J
answerIdK S
)S T
;T U
_db 
. 
Answers 
. 
Remove 
( 
answer %
)% &
;& '
_db 
. 
SaveChanges 
( 
) 
; 
} 	
} 
} ¸
UC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\IRepository\IAnswerRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
." #
IRepository# .
{ 
public 

	interface 
IAnswerRepository &
{ 
Answer 
? 
	GetAnswer 
( 
int 
id  
)  !
;! "
void 
RemoveAnswer 
( 
int 
answerId &
)& '
;' (
}

 
} ‹	
WC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\IRepository\IQuestionRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
." #
IRepository# .
{ 
public 

	interface 
IQuestionRepository (
{ 
IEnumerable 
< 
Question 
> 
GetAllQuestions -
(- .
). /
;/ 0
void 
Add 
( 
Question 
question "
)" #
;# $
Question		 
?		 
GetQuestion		 
(		 
int		 !
id		" $
)		$ %
;		% &
void

 
Remove

 
(

 
Question

 
question

 %
)

% &
;

& '
void 
Update 
( 
Question 
question %
)% &
;& '
IEnumerable 
< 
Question 
> &
GetUnsentQuestionsFromQuiz 8
(8 9
int9 <
quizId= C
)C D
;D E
} 
} ∏
SC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\IRepository\IQuizRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
." #
IRepository# .
{ 
public 

	interface 
IQuizRepository $
{ 
IEnumerable 
< 
Quiz 
> 
GetAllQuizzes '
(' (
)( )
;) *
void		 
Add		 
(		 
Quiz		 
quiz		 
)		 
;		 
Quiz

 
?

 
GetQuiz

 
(

 
int

 
id

 
)

 
;

 
void 
Remove 
( 
Quiz 
quiz 
) 
; 
void 
Update 
( 
Quiz 
quiz 
) 
; 
void 
	AddToQuiz 
( 
int 

questionId %
,% &
int' *
quizId+ 1
)1 2
;2 3
void 
RemoveFromQuiz 
( 
int 

questionId  *
,* +
int, /
quizId0 6
)6 7
;7 8
void 
Save 
( 
) 
; 
IEnumerable 
< 
Quiz 
> 
GetAllPastQuizzes +
(+ ,
), -
;- .
} 
} ·
SC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\IRepository\IUserRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
." #
IRepository# .
{ 
public 

	interface 
IUserRepository $
{ 
User 
? 
GetUser 
( 
string 
username %
)% &
;& '
IEnumerable 
< 
User 
> 
GetAllUsers %
(% &
)& '
;' (
User		 
AddUser		 
(		 
string		 
username		 $
)		$ %
;		% &
void

 
UpdateUserScore

 
(

 
User

 !
user

" &
)

& '
;

' (
void 

ResetUsers 
( 
) 
; 
} 
} π
JC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\QuestionRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
{ 
public		 

class		 
QuestionRepository		 #
:		$ %
IQuestionRepository		& 9
{

 
private 
readonly  
ApplicationDbContext -
_db. 1
;1 2
public 
QuestionRepository !
(! " 
ApplicationDbContext" 6
db7 9
)9 :
{ 	
_db 
= 
db 
; 
} 	
public 
void 
Add 
( 
Question  
question! )
)) *
{ 	
_db 
. 
	Questions 
. 
Add 
( 
question &
)& '
;' (
_db 
. 
SaveChanges 
( 
) 
; 
} 	
public 
void 
Update 
( 
Question #
question$ ,
), -
{ 	
foreach 
( 
var 
answer 
in  "
question# +
.+ ,
Answers, 3
)3 4
{ 
_db 
. 
Answers 
. 
Update "
(" #
answer# )
)) *
;* +
} 
_db 
. 
	Questions 
. 
Update  
(  !
question! )
)) *
;* +
_db 
. 
SaveChanges 
( 
) 
; 
}   	
public"" 
Question"" 
?"" 
GetQuestion"" $
(""$ %
int""% (
id"") +
)""+ ,
{## 	
return$$ 
_db$$ 
.$$ 
	Questions$$  
.$$  !
Include$$! (
($$( )
$str$$) 2
)$$2 3
.$$3 4
FirstOrDefault$$4 B
($$B C
question$$C K
=>$$L N
question$$O W
.$$W X
Id$$X Z
==$$[ ]
id$$^ `
)$$` a
;$$a b
}%% 	
public'' 
IEnumerable'' 
<'' 
Question'' #
>''# $
GetAllQuestions''% 4
(''4 5
)''5 6
{(( 	
return)) 
_db)) 
.)) 
	Questions))  
.))  !
Include))! (
())( )
$str))) 2
)))2 3
;))3 4
}** 	
public,, 
void,, 
Remove,, 
(,, 
Question,, #
question,,$ ,
),,, -
{-- 	
_db.. 
... 
	Questions.. 
... 
Remove..  
(..  !
question..! )
)..) *
;..* +
_db// 
.// 
SaveChanges// 
(// 
)// 
;// 
}00 	
public22 
IEnumerable22 
<22 
Question22 #
>22# $&
GetUnsentQuestionsFromQuiz22% ?
(22? @
int22@ C
quizId22D J
)22J K
{33 	
return44 
_db44 
.44 
	Questions44  
.44  !
Include44! (
(44( )
$str44) 2
)442 3
.443 4
Where444 9
(449 :
x44: ;
=>44< >
x44? @
.44@ A
QuizId44A G
==44H J
quizId44K Q
&&44R T
x44U V
.44V W
IsSent44W ]
==44^ `
false44a f
)44f g
;44g h
}55 	
}99 
}:: Â@
FC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\QuizRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
{		 
public

 

class

 
QuizRepository

 
:

  !
IQuizRepository

" 1
{ 
private 
readonly  
ApplicationDbContext -
_db. 1
;1 2
public 
QuizRepository 
(  
ApplicationDbContext 2
db3 5
)5 6
{ 	
_db 
= 
db 
; 
} 	
public 
void 
Add 
( 
Quiz 
quiz !
)! "
{ 	
_db 
. 
Quizzes 
. 
Add 
( 
quiz  
)  !
;! "
_db 
. 
SaveChanges 
( 
) 
; 
} 	
public 
IEnumerable 
< 
Quiz 
>  
GetAllQuizzes! .
(. /
)/ 0
{ 	
return 
_db 
. 
Quizzes 
. 
Include &
(& '
$str' :
): ;
.; <
Where< A
(A B
quizB F
=>G I
quizJ N
.N O
StatusO U
!=V X
StatusY _
._ `
FINISHED` h
)h i
;i j
} 	
public 
Quiz 
? 
GetQuiz 
( 
int  
id! #
)# $
{ 	
return 
_db 
. 
Quizzes 
. 
Include &
(& '
$str' :
): ;
.; <
FirstOrDefault< J
(J K
quizK O
=>P R
quizS W
.W X
IdX Z
==[ ]
id^ `
)` a
;a b
}   	
public"" 
void"" 
Remove"" 
("" 
Quiz"" 
quiz""  $
)""$ %
{## 	
_db$$ 
.$$ 
Quizzes$$ 
.$$ 
Remove$$ 
($$ 
quiz$$ #
)$$# $
;$$$ %
_db%% 
.%% 
SaveChanges%% 
(%% 
)%% 
;%% 
}&& 	
public(( 
void(( 
UpdatePartial(( !
(((! "
Quiz((" &
quiz((' +
)((+ ,
{)) 	
_db** 
.** 
Quizzes** 
.** 
Update** 
(** 
quiz** #
)**# $
;**$ %
_db++ 
.++ 
SaveChanges++ 
(++ 
)++ 
;++ 
},, 	
public.. 
void.. 
	AddToQuiz.. 
(.. 
int.. !

questionId.." ,
,.., -
int... 1
quizId..2 8
)..8 9
{// 	
var00 
quiz00 
=00 
_db00 
.00 
Quizzes00 "
.00" #
Include00# *
(00* +
$str00+ 6
)006 7
.007 8
FirstOrDefault008 F
(00F G
quiz00G K
=>00L N
quiz00O S
.00S T
Id00T V
==00W Y
quizId00Z `
)00` a
;00a b
var11 
question11 
=11 
_db11 
.11 
	Questions11 (
.11( )
Include11) 0
(110 1
$str111 :
)11: ;
.11; <
FirstOrDefault11< J
(11J K
question11K S
=>11T V
question11W _
.11_ `
Id11` b
==11c e

questionId11f p
)11p q
;11q r
if33 
(33 
quiz33 
==33 
null33 
)33 
{44 
throw55 
new55 !
QuizNotFoundException55 /
(55/ 0
)550 1
;551 2
}66 
if77 
(77 
question77 
==77 
null77  
)77  !
{88 
throw99 
new99 %
QuestionNotFoundException99 3
(993 4
)994 5
;995 6
}:: 
quiz<< 
.<< 
	Questions<< 
.<< 
Add<< 
(<< 
question<< '
)<<' (
;<<( )
_db== 
.== 
SaveChanges== 
(== 
)== 
;== 
}>> 	
public@@ 
void@@ 
RemoveFromQuiz@@ "
(@@" #
int@@# &

questionId@@' 1
,@@1 2
int@@3 6
quizId@@7 =
)@@= >
{AA 	
varBB 
quizBB 
=BB 
_dbBB 
.BB 
QuizzesBB "
.BB" #
IncludeBB# *
(BB* +
$strBB+ 6
)BB6 7
.BB7 8
FirstOrDefaultBB8 F
(BBF G
quizBBG K
=>BBL N
quizBBO S
.BBS T
IdBBT V
==BBW Y
quizIdBBZ `
)BB` a
;BBa b
varCC 
questionCC 
=CC 
_dbCC 
.CC 
	QuestionsCC (
.CC( )
IncludeCC) 0
(CC0 1
$strCC1 :
)CC: ;
.CC; <
FirstOrDefaultCC< J
(CCJ K
questionCCK S
=>CCT V
questionCCW _
.CC_ `
IdCC` b
==CCc e

questionIdCCf p
)CCp q
;CCq r
ifEE 
(EE 
quizEE 
==EE 
nullEE 
)EE 
{FF 
throwGG 
newGG !
QuizNotFoundExceptionGG /
(GG/ 0
)GG0 1
;GG1 2
}HH 
ifII 
(II 
questionII 
==II 
nullII  
||II! #
!II$ %
quizII% )
.II) *
	QuestionsII* 3
.II3 4
ContainsII4 <
(II< =
questionII= E
)IIE F
)IIF G
{JJ 
throwKK 
newKK %
QuestionNotFoundExceptionKK 3
(KK3 4
)KK4 5
;KK5 6
}LL 
quizNN 
.NN 
	QuestionsNN 
.NN 
RemoveNN !
(NN! "
questionNN" *
)NN* +
;NN+ ,
_dbOO 
.OO 
SaveChangesOO 
(OO 
)OO 
;OO 
}PP 	
publicRR 
voidRR 
SaveRR 
(RR 
)RR 
{SS 	
_dbTT 
.TT 
SaveChangesTT 
(TT 
)TT 
;TT 
}UU 	
publicVV 
IEnumerableVV 
<VV 
QuizVV 
>VV  
GetAllPastQuizzesVV! 2
(VV2 3
)VV3 4
{WW 	
returnXX 
_dbXX 
.XX 
QuizzesXX 
.XX 
IncludeXX &
(XX& '
$strXX' :
)XX: ;
.XX; <
WhereXX< A
(XXA B
quizXXB F
=>XXG I
quizXXJ N
.XXN O
StatusXXO U
==XXV X
StatusXXY _
.XX_ `
FINISHEDXX` h
)XXh i
;XXi j
}YY 	
public[[ 
void[[ 
Update[[ 
([[ 
Quiz[[ 
quiz[[  $
)[[$ %
{\\ 	
foreach]] 
(]] 
var]] 
question]] !
in]]" $
quiz]]% )
.]]) *
	Questions]]* 3
)]]3 4
{^^ 
_db__ 
.__ 
	Questions__ 
.__ 
Update__ $
(__$ %
question__% -
)__- .
;__. /
}`` 
_dbaa 
.aa 
Quizzesaa 
.aa 
Updateaa 
(aa 
quizaa #
)aa# $
;aa$ %
_dbbb 
.bb 
SaveChangesbb 
(bb 
)bb 
;bb 
}cc 	
}dd 
}ee Ú
FC:\Projects\HQTrivia\server\HQTrivia.Data\Repository\UserRepository.cs
	namespace 	
HQTrivia
 
. 
Data 
. 

Repository "
{		 
public

 

class

 
UserRepository

  
:

! "
IUserRepository

# 2
{ 
private 
readonly  
ApplicationDbContext -
_db. 1
;1 2
public 
UserRepository 
(  
IServiceScopeFactory 2
factory3 :
): ;
{ 	
_db 
= 
factory 
. 
CreateScope %
(% &
)& '
.' (
ServiceProvider( 7
.7 8
GetRequiredService8 J
<J K 
ApplicationDbContextK _
>_ `
(` a
)a b
;b c
;d e
} 	
public 
IEnumerable 
< 
User 
>  
GetAllUsers! ,
(, -
)- .
{ 	
return 
_db 
. 
Users 
; 
} 	
public 
User 
? 
GetUser 
( 
string #
username$ ,
), -
{ 	
return 
_db 
. 
Users 
. 
FirstOrDefault +
(+ ,
user, 0
=>1 3
user4 8
.8 9
Username9 A
.A B
EqualsB H
(H I
usernameI Q
)Q R
)R S
;S T
} 	
public 
User 
AddUser 
( 
string "
username# +
)+ ,
{ 	
User 
user 
= 
new 
User  
(  !
)! "
{ 
Username 
= 
username #
,# $
Score   
=   
$num   
}!! 
;!! 
_db"" 
."" 
Users"" 
."" 
Add"" 
("" 
user"" 
)"" 
;""  
_db## 
.## 
SaveChanges## 
(## 
)## 
;## 
return$$ 
user$$ 
;$$ 
}%% 	
public'' 
void'' 
UpdateUserScore'' #
(''# $
User''$ (
user'') -
)''- .
{(( 	
_db)) 
.)) 
Users)) 
.)) 
Update)) 
()) 
user)) !
)))! "
;))" #
_db** 
.** 
SaveChanges** 
(** 
)** 
;** 
}++ 	
public-- 
void-- 

ResetUsers-- 
(-- 
)--  
{.. 	
foreach// 
(// 
var// 
username// !
in//" $
_db//% (
.//( )
Users//) .
.//. /
Select/// 5
(//5 6
e//6 7
=>//8 :
e//; <
.//< =
Username//= E
)//E F
)//F G
{00 
var11 
entity11 
=11 
new11  
User11! %
{11& '
Username11( 0
=111 2
username113 ;
}11< =
;11= >
_db22 
.22 
Users22 
.22 
Attach22  
(22  !
entity22! '
)22' (
;22( )
_db33 
.33 
Users33 
.33 
Remove33  
(33  !
entity33! '
)33' (
;33( )
}44 
_db55 
.55 
SaveChanges55 
(55 
)55 
;55 
}66 	
}77 
}88 